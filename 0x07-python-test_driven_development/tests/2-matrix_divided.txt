testing function for matrix division
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1.2, 2.2, 3.2], [4.2, 5.2, 6.2]], 1.2)
[[1.0, 1.83, 2.67], [3.5, 4.33, 5.17]]


TEST CONDITIONS WHERE AN ERROR IS RAISED
========================================

testing how function handles None argument
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided(None, None)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

testing how function handles incorrect matrix argument
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided({9, 8, 7}, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

testing how function handles list of None
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([None], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

testing how function handles list of incorrect type
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided(["string"], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

testing how function handles incorrect type for element in matrix
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([["string"], ["here"]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

testing how function handles rows of different lengths
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 8, 7, 9], [2]], 1.5)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

testing how function handles division by 0
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [5, 6, 7]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

testing how function handles division by incorrect type
::
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [5, 6, 7]], "25")
Traceback (most recent call last):
TypeError: div must be a number
